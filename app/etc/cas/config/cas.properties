########################################################################################################################
# This is a configuration for local development (outside a Dogu) of the CAS.
#
# This configuration is overwritten when the CAS is used as a dogu (see cas.properties.tpl in the /resources/etc/cas
# directory of the repository root).
#
# This configuration is based on a real LDAP configuration of a CES instance.
#
# An Open-LDAP is required for this configuration to work. A Docker-compose file with a suitably configured Open-LDAP
# exists in this directory (see docker-compose.yml in the root directory of the app directory)
# ----------------------------------------------------------------------------------------------------------------------

########################################################################################################################
# General server configuration
# Properties: https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#cas-server
# ----------------------------------------------------------------------------------------------------------------------
# cas.server.name=https://192.168.56.2
cas.server.name=https://localhost:8443
cas.server.prefix=${cas.server.name}/cas

#ces.services.stage=production
ces.services.stage=development

# Unique CAS node name
# host.name is used to generate unique Service Ticket IDs and SAMLArtifacts. This is usually set to the specific
# hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
host.name=cas.ces.local
########################################################################################################################

########################################################################################################################
# Logging configuration
# Configuration guide: https://apereo.github.io/cas/6.3.x/logging/Logging.html
# Properties: https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#logging
# ----------------------------------------------------------------------------------------------------------------------
logging.config=file:/etc/cas/config/log4j2.xml
########################################################################################################################

########################################################################################################################
# LDAP
# Configuration guide: https://apereo.github.io/cas/6.3.x/installation/LDAP-Authentication.html
# Properties: https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#ldap-authentication
#             https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties-Common.html#ldap-connection-settings
#             https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties-Common.html#connection-strategies
#             https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties-Common.html#ldap-authenticationsearch-settings
#             https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties-Common.html#ldap-authenticationsearch-settings
# ----------------------------------------------------------------------------------------------------------------------

#========================================
# General properties
#========================================
# cas.authn.ldap[0].ldap-url=ldap://ldap:389
cas.authn.ldap[0].ldap-url=ldap://localhost:1389/

# Manager DN for authenticated searches
#cas.authn.ldap[0].bind-dn=cn=cas_5oNqMv,ou=Bind Users,o=ces.local,dc=cloudogu,dc=com

# Manager password for authenticated searches
#cas.authn.ldap[0].bind-credential=JnQK3Q0cYVLSTFXj

# LDAP connection timeout in milliseconds
cas.authn.ldap[0].connect-timeout=3000

# Whether to use StartTLS
cas.authn.ldap[0].use-start-tls=false

cas.authn.ldap[0].principal-attribute-list=uid:username,cn,mail:mail,givenName:givenName,sn:surname,displayName,memberOf:groups
cas.authn.attributeRepository.ldap[0].attributes.groups=memberOf
ces.services.allowedAttributes=username,cn,mail,givenName,surname,displayName,groups

#========================================
# LDAP connection pool configuration
#========================================
cas.authn.ldap[0].min-pool-size=3
cas.authn.ldap[0].max-pool-size=10
cas.authn.ldap[0].validate-on-checkout=false
cas.authn.ldap[0].validate-periodically=true

# Amount of time in milliseconds to block on pool exhausted condition
# before giving up.
cas.authn.ldap[0].block-wait-time=3000

# Frequency of connection validation in seconds
# Only applies if validatePeriodically=true
cas.authn.ldap[0].validate-period=300

# Attempt to prune connections every N seconds
cas.authn.ldap[0].prune-period=300

# Maximum amount of time an idle connection is allowed to be in
# pool before it is liable to be removed/destroyed
cas.authn.ldap[0].idle-time=600

#========================================
# Authentication
#========================================
cas.authn.ldap[0].type=AUTHENTICATED

# Base DN of users to be authenticated
#cas.authn.ldap[0].base-dn=ou=People,o=ces.local,dc=cloudogu,dc=com
cas.authn.ldap[0].base-dn=o=ces.local,dc=cloudogu,dc=com

# Search filter used for configurations that require searching for DNs
cas.authn.ldap[0].search-filter=(&(objectClass=person)(uid={user}))

# member search settings

# settings for ldap group search by member
# base dn for group search e.g.: o=ces.local,dc=cloudogu,dc=com
cas.authn.attributeRepository.ldap[0].attributes.baseDn=

# search filter for group search {0} will be replaced with the dn of the user
# e.g.: (member={0})
# if this property is empty, group search by member will be skipped
cas.authn.attributeRepository.ldap[0].attributes.searchFilter=

# name attribute of groups e.g.: cn
cas.authn.attributeRepository.ldap[0].attributes.attribute.name=

# LDAP ssl trust manager: ANY | DEFAULT
cas.authn.ldap[0].trust-manager=DEFAULT

# Disable static users
cas.authn.accept.enabled=false

# Disable LdapAuthenticationConfiguration-Bean to suppress registration of the LDAP Authentication handler of the cas.
# We use and register our own LDAP authentication handler by extending the LDAP authentication handler from the CAS.
# https://apereo.github.io/cas/6.3.x/configuration/Configuration-Management-Extensions.html#exclusions
spring.autoconfigure.exclude=org.apereo.cas.config.LdapAuthenticationConfiguration

########################################################################################################################

########################################################################################################################
# Throttling
# Configuration guide: https://apereo.github.io/cas/6.3.x/installation/Configuring-Authentication-Throttling.html
# Properties: https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#authentication-throttling
# ----------------------------------------------------------------------------------------------------------------------

########################################################################################################################

########################################################################################################################
# Timeouts
# Configuration guide: https://apereo.github.io/cas/6.3.x/ticketing/Configuring-Ticket-Expiration-Policy.html#timeout
# Properties: https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#default
# ----------------------------------------------------------------------------------------------------------------------
cas.ticket.tgt.max-time-to-live-in-seconds=86400
cas.ticket.tgt.time-to-kill-in-seconds=36000
########################################################################################################################

########################################################################################################################
# OIDC
# Configuration guide:
# Properties: https://apereo.github.io/cas/6.1.x/configuration/Configuration-Properties-Common.html#delegated-authentication-openid-connect-settings
# ----------------------------------------------------------------------------------------------------------------------
### path to the discovery url of the provider
cas.authn.pac4j.oidc[0].generic.discovery-uri=https://staging-account.cloudogu.com/auth/realms/Cloudogu/.well-known/openid-configuration

### required configuration
cas.authn.pac4j.oidc[0].generic.useNonce=true
cas.authn.pac4j.oidc[0].generic.enabled=true

### name and secret for the client to identify itself by the provider
cas.authn.pac4j.oidc[0].generic.id=my-client-id
cas.authn.pac4j.oidc[0].generic.secret=<addsecret_here>

### Max clock skew
cas.authn.pac4j.oidc[0].generic.max-clock-skew=5

### the client name used to identify the client in the cas application
cas.authn.pac4j.oidc[0].generic.client-name=MyCloudogu

### perform automatic redirects to the configured provider when a user logs into the cas
cas.authn.pac4j.oidc[0].generic.auto-redirect=false

### redirect back to the ces after successful logout
cas.authn.pac4j.oidc[0].generic.target-url=

### information that are supposed to be contained in the responses of the OIDC provider
cas.authn.pac4j.oidc[0].generic.scope=openid email profile groups
cas.authn.pac4j.oidc[0].generic.responseType=code

### preferred algorithm to use for the open id connect jwt tokens
cas.authn.pac4j.oidc[0].generic.preferredJwsAlgorithm=RS256

### the attribute that should be used as the principal id
ces.services.oidcPrincipalsAttribute=username

### attribute mapping
ces.services.attributeMapping=email:mail,family_name:surname,given_name:givenName,preferred_username:username,name:displayName
########################################################################################################################

########################################################################################################################
# OIDC+OAuth2 - Client Mode
# Configuration guide:
# OIDC Properties: https://apereo.github.io/cas/6.4.x/authentication/OIDC-Authentication-Discovery.html#discovery---openid-connect-authentication
# OAuth2 Properties: https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#oauth2
# ----------------------------------------------------------------------------------------------------------------------
# OIDC
# assigns the issuer of oidc correctly
cas.authn.oidc.issuer=${cas.server.prefix}/oidc
cas.client.prefix=${cas.server.prefix}
# ----------------------------------------------------------------------------------------------------------------------
# OAuth2
# Time for the code to expire
cas.authn.oauth.code.timeToKillInSeconds=30
cas.authn.oauth.code.numberOfUses=1
# Access Token (Session) is valid for 1 day (= 86000 seconds)
cas.authn.oauth.accessToken.timeToKillInSeconds=86000
cas.authn.oauth.accessToken.maxTimeToLiveInSeconds=86000
########################################################################################################################

#### multi factor authentication ####
cas.authn.mfa.provider-selection-enabled=true

### mail ###
cas.authn.mfa.simple.mail.attribute-name=mail
cas.authn.mfa.simple.mail.from=casdevelop@local.local
cas.authn.mfa.simple.mail.subject=Two Factor Subject
cas.authn.mfa.simple.mail.text=Hello! Your requested CAS token is %s
cas.authn.mfa.simple.timeToKillInSeconds=30

spring.mail.default-encoding=UTF-8
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.test-connection=true

### gauth ###
#cas.authn.mfa.globalProviderId=mfa-gauth
cas.authn.mfa.gauth.issuer=CASIssuer
cas.authn.mfa.gauth.label=CASLabel
cas.authn.mfa.gauth.json.location=file:/etc/cas/gauths.json
#cas.authn.mfa.gauth.crypto.signing.key=secret-todo
#cas.authn.mfa.gauth.crypto.encryption.key=secret-todo
cas.authn.mfa.gauth.multiple-device-registration-enabled=true
#cas.authn.mfa.gauth.window-size=3
#cas.authn.mfa.gauth.code-digits=6
#cas.authn.mfa.gauth.time-step-size=30
#cas.authn.mfa.gauth.rank=0
#cas.authn.mfa.gauth.trusted-device-enabled=false
#cas.authn.mfa.gauth.multiple-device-registration-enabled=false
#cas.authn.mfa.gauth.name=testgauth
#cas.authn.mfa.gauth.order=1
#cas.authn.mfa.gauth.ldap.account-attribute-name=gauthRecord

### webauthn ###
cas.authn.mfa.web-authn.json.location=file:/etc/cas/webauthn.json
#cas.authn.mfa.web-authn.core.application-id=appID
#cas.authn.mfa.web-authn.core.relying-party-id=partyID
#cas.authn.mfa.web-authn.core.relying-party-name=partyName
#cas.authn.mfa.web-authn.crypto.encryption.key=secret-todo