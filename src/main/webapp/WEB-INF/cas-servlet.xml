<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:webflow="http://www.springframework.org/schema/webflow-config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd        http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd">

  <import resource="spring-configuration/propertyFileConfigurer.xml"/>

  <!-- Theme Resolver -->
  <bean class="org.jasig.cas.services.web.ServiceThemeResolver" id="themeResolver" p:argumentExtractors-ref="argumentExtractors" p:defaultThemeName="${cas.themeResolver.defaultThemeName}" p:servicesManager-ref="servicesManager">
    <property name="mobileBrowsers">
      <map>
        <entry key=".*iPhone.*" value="iphone"/>
        <entry key=".*Android.*" value="iphone"/>
        <entry key=".*Safari.*Pre.*" value="iphone"/>
        <entry key=".*Nokia.*AppleWebKit.*" value="iphone"/>
      </map>
    </property>
  </bean>

  <!-- View Resolver -->
  <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver" id="viewResolver" p:order="0">
    <property name="basenames">
      <list>
        <value>${cas.viewResolver.basename}</value>
        <value>protocol_views</value>
      </list>
    </property>
  </bean>

  <bean class="org.springframework.web.servlet.view.XmlViewResolver" id="xmlViewResolver" p:location="/WEB-INF/view/views.xml" p:order="1"/>
  
  <!-- Locale Resolver -->
  <bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver"/>

  <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" id="localeChangeInterceptor"/>

  <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="urlBasedViewResolver" p:order="2" p:prefix="/WEB-INF/view/jsp/" p:suffix=".jsp" p:viewClass="org.springframework.web.servlet.view.InternalResourceView"/>
  
  <bean class="org.jasig.cas.web.FlowExecutionExceptionResolver" id="errorHandlerResolver"/>

  <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>

  <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" id="handlerMappingC">
    <property name="mappings">
      <props>
        <prop key="/logout">logoutController</prop>
        <prop key="/serviceValidate">serviceValidateController</prop>
        <prop key="/validate">legacyValidateController</prop>
        <prop key="/proxy">proxyController</prop>
        <prop key="/proxyValidate">proxyValidateController</prop>
        <prop key="/samlValidate">samlValidateController</prop>
        <prop key="/services/add.html">addRegisteredServiceSimpleFormController</prop>
        <prop key="/services/edit.html">editRegisteredServiceSimpleFormController</prop>
        <prop key="/services/loggedOut.html">serviceLogoutViewController</prop>
        <prop key="/services/viewStatistics.html">viewStatisticsController</prop>
        <prop key="/services/*">manageRegisteredServicesMultiActionController</prop>
        <prop key="/openid/*">openIdProviderController</prop>
        <prop key="/authorizationFailure.html">passThroughController</prop>
        <prop key="/403.html">passThroughController</prop>
        <prop key="/status">healthCheckController</prop>
      </props>
    </property>
    <property name="alwaysUseFullPath" value="true"/>
    <!--
     uncomment this to enable sending PageRequest events.
     <property
       name="interceptors">
       <list>
         <ref bean="pageRequestHandlerInterceptorAdapter" />
       </list>
     </property>
      -->
  </bean>

  <bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController" id="passThroughController"/>

  <bean class="org.jasig.cas.web.OpenIdProviderController" id="openIdProviderController" p:loginUrl="${cas.securityContext.casProcessingFilterEntryPoint.loginUrl}"/>

  <bean class="org.springframework.web.servlet.mvc.ParameterizableViewController" id="serviceLogoutViewController" p:viewName="serviceLogoutView"/>

  <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping" p:flowRegistry-ref="flowRegistry" p:order="2">
    <property name="interceptors">
      <ref local="localeChangeInterceptor"/>
    </property>
  </bean>


  <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter" p:flowExecutor-ref="flowExecutor" p:flowUrlHandler-ref="flowUrlHandler"/>

  <bean class="org.jasig.cas.web.flow.CasDefaultFlowUrlHandler" id="flowUrlHandler"/>

  <webflow:flow-executor flow-registry="flowRegistry" id="flowExecutor">
    <webflow:flow-execution-attributes>
      <webflow:always-redirect-on-pause value="false"/>
      <webflow:redirect-in-same-state value="false"/>
    </webflow:flow-execution-attributes>
    
  </webflow:flow-executor>

  <webflow:flow-registry flow-builder-services="builder" id="flowRegistry">
    <webflow:flow-location id="login" path="/WEB-INF/login-webflow.xml"/>
  </webflow:flow-registry>

  <webflow:flow-builder-services expression-parser="expressionParser" id="builder" view-factory-creator="viewFactoryCreator"/>

  <bean class="org.jasig.cas.web.flow.TerminateWebSessionListener" id="terminateWebSessionListener" p:serviceManagerUrl="${cas.securityContext.serviceProperties.service}"/>

  <bean class="org.springframework.webflow.expression.WebFlowOgnlExpressionParser" id="expressionParser"/>

  <bean class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator" id="viewFactoryCreator">
    <property name="viewResolvers">
      <list>
        <ref local="viewResolver"/>
      </list>
    </property>
  </bean>
  <bean class="org.jasig.cas.web.ServiceValidateController" id="proxyValidateController" p:argumentExtractor-ref="casArgumentExtractor" p:centralAuthenticationService-ref="centralAuthenticationService" p:proxyHandler-ref="proxy20Handler"/>

  <bean class="org.jasig.cas.web.ServiceValidateController" id="serviceValidateController" p:argumentExtractor-ref="casArgumentExtractor" p:centralAuthenticationService-ref="centralAuthenticationService" p:proxyHandler-ref="proxy20Handler" p:validationSpecificationClass="org.jasig.cas.validation.Cas20WithoutProxyingValidationSpecification"/>

  <bean class="org.jasig.cas.web.ServiceValidateController" id="samlValidateController" p:argumentExtractor-ref="samlArgumentExtractor" p:centralAuthenticationService-ref="centralAuthenticationService" p:failureView="casSamlServiceFailureView" p:proxyHandler-ref="proxy20Handler" p:successView="casSamlServiceSuccessView" p:validationSpecificationClass="org.jasig.cas.validation.Cas20WithoutProxyingValidationSpecification"/>

  <bean class="org.jasig.cas.web.ServiceValidateController" id="legacyValidateController" p:argumentExtractor-ref="casArgumentExtractor" p:centralAuthenticationService-ref="centralAuthenticationService" p:failureView="cas1ServiceFailureView" p:proxyHandler-ref="proxy10Handler" p:successView="cas1ServiceSuccessView" p:validationSpecificationClass="org.jasig.cas.validation.Cas10ProtocolValidationSpecification"/>

  <bean class="org.jasig.cas.web.ProxyController" id="proxyController" p:centralAuthenticationService-ref="centralAuthenticationService"/>

  <bean class="org.jasig.cas.web.StatisticsController" id="viewStatisticsController" p:casTicketSuffix="${host.name}">
    <constructor-arg index="0" ref="ticketRegistry"/>
  </bean>

  <bean class="org.jasig.cas.web.LogoutController" id="logoutController" p:centralAuthenticationService-ref="centralAuthenticationService" p:followServiceRedirects="${cas.logout.followServiceRedirects:false}" p:logoutView="casLogoutView" p:servicesManager-ref="servicesManager" p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator" p:warnCookieGenerator-ref="warnCookieGenerator"/>

  <bean class="org.jasig.cas.web.HealthCheckController" id="healthCheckController" p:healthCheckMonitor-ref="healthCheckMonitor"/>

  <bean class="org.jasig.cas.web.flow.InitialFlowSetupAction" id="initialFlowSetupAction" p:argumentExtractors-ref="argumentExtractors" p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator" p:warnCookieGenerator-ref="warnCookieGenerator"/>

  <bean class="org.jasig.cas.web.flow.AuthenticationViaFormAction" id="authenticationViaFormAction" p:centralAuthenticationService-ref="centralAuthenticationService" p:warnCookieGenerator-ref="warnCookieGenerator"/>

  <bean class="org.jasig.cas.web.flow.GenerateServiceTicketAction" id="generateServiceTicketAction" p:centralAuthenticationService-ref="centralAuthenticationService"/>

  <bean class="org.jasig.cas.web.flow.SendTicketGrantingTicketAction" id="sendTicketGrantingTicketAction" p:centralAuthenticationService-ref="centralAuthenticationService" p:ticketGrantingTicketCookieGenerator-ref="ticketGrantingTicketCookieGenerator"/>

  <bean class="org.jasig.cas.web.flow.GatewayServicesManagementCheck" id="gatewayServicesManagementCheck">
    <constructor-arg index="0" ref="servicesManager"/>
  </bean>

  <bean class="org.jasig.cas.web.flow.ServiceAuthorizationCheck" id="serviceAuthorizationCheck">
        <constructor-arg index="0" ref="servicesManager"/>
  </bean>

  <bean class="org.jasig.cas.web.flow.GenerateLoginTicketAction" id="generateLoginTicketAction" p:ticketIdGenerator-ref="loginTicketUniqueIdGenerator"/>

  <bean class="org.jasig.cas.services.web.RegisteredServiceSimpleFormController" id="addRegisteredServiceSimpleFormController" p:commandName="registeredService" p:formView="addServiceView" p:sessionForm="true" p:successView="addServiceView" p:validator-ref="registeredServiceValidator">
    <constructor-arg index="0" ref="servicesManager"/>
    <constructor-arg index="1" ref="attributeRepository"/>
  </bean>

  <bean class="org.jasig.cas.services.web.RegisteredServiceSimpleFormController" id="editRegisteredServiceSimpleFormController" p:commandName="registeredService" p:formView="editServiceView" p:sessionForm="false" p:successView="editServiceView" p:validator-ref="registeredServiceValidator">
    <constructor-arg index="0" ref="servicesManager"/>
    <constructor-arg index="1" ref="attributeRepository"/>
  </bean>

  <bean class="org.jasig.cas.services.web.support.RegisteredServiceValidator" id="registeredServiceValidator" p:personAttributeDao-ref="attributeRepository" p:servicesManager-ref="servicesManager"/>

  <bean class="org.jasig.cas.services.web.ManageRegisteredServicesMultiActionController" id="manageRegisteredServicesMultiActionController">
    <constructor-arg index="0" ref="servicesManager"/>
    <constructor-arg index="1" value="${cas.securityContext.serviceProperties.service}"/>
  </bean>

  <bean class="org.jasig.cas.util.SpringAwareMessageMessageInterpolator" id="messageInterpolator"/>

  <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" id="credentialsValidator" p:messageInterpolator-ref="messageInterpolator"/>
</beans>
